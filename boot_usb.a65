
.(

;&lock	=$0700ff	; last byte in zeropage in bank 7/block 14
;&VCOUNT=$0700fe
;usbtmp	=$0700fd

&MAP_USB	=USBBLK
&MAP_BAS	=0
&MAPREG		=BANK

USBPAGE	=$a0		; start of driver in Flash ROM

USBBLK  =15             ; bank 7 value for BANK  

DRIVERADDR      =$1000
COMPADDR        =$df00

driver_init	=DRIVERADDR                                               
&driver_poll	=DRIVERADDR+3                                             

pause_ax        =COMPADDR+9
driver_pause_a  =DRIVERADDR+6+1
print_ax        =COMPADDR+12
driver_print_a  =DRIVERADDR+9+1

        ; -----------------------                                        
        ; copy over USB code to RAM                                      
        ; $1a000-$1bfff in flash img                                     
        ; copy to DRIVERADDR                                                

	.xl
&setup_usb_xl                                                                         
        .(                                                               
        lda #MAP_USB 	; for the PET default VICCY base address of $1000 
        sta BANK        ; $e802                                           

        lda #USBPAGE    ; page in flash                                  
        ldx #DRIVERADDR ; start in current bank                          
        ldy #$2000      ; transfer len                                   
        jsr flash2direct2_xl                                             

	; copy over boot companion
	ldy #romcompend-romcomp-1
l	lda romcomp,y
	sta COMPADDR,y
	dey
	bpl l

	; link companion and driver
	ldx #pause_ax
	stx driver_pause_a
	ldx #print_ax
	stx driver_print_a

	sep #%00010000
	.xs

	jsr t_init
    	bcs nohw
       
	jsr t_install
 
        ; TODO:                                                          
        ; 2. init USB, bind into IRQ                                     
        ; 3. CLI                                                         
        ; 4. then use USB keyboard in boot menu                          
        ; 5. SEI                                                         
        ; 6. set ROMs                                                    
        ; 7. if USB option set, copy real bind companion to $df00        
        ; 8. enable USB interrupt handling                               
        ; 9. switch BANK back to 0 ($20)                                 
        ; 10. boot into ROM                                              
         
nohw                                                               
        lda #MAP_BAS
        sta BANK                                                         

	rep #%00010000
	.xl
	rts
        .)                                                               

	

	.xs                                                                         

&usb_poll .(
        lda #MAP_USB    
        sta MAPREG      
                       
        jsr driver_poll 

        lda #MAP_BAS     
        sta MAPREG      
	rts
	.)

romcomp	.(
	*=COMPADDR
; ignored
        jmp t_init        ; init the USB stack               
        jmp t_install     ; patch in USB interrupt into ROM  
        jmp t_uninstall   ; remove USB patch                 
; called from USB driver interrupt routine                         
&usb_pause      jmp t_pause       ;                                  
&usb_appendkey  jmp t_printc2                                        
	*=*-COMPADDR+romcomp
	.)
romcompend

t_install .(
	; interrupt is already established for key scanning
	; we just need to release the lock
	lda #0
	sta lock

	rts
	.)

	; is entered in MAP_USB, .xs, .as
t_init    .(
	php                         
	sei                         
	
	lda #<-1                    
	sta lock                    
	
	jsr driver_init             
	
	bcs locked                  
	plp                         
	clc                         
	rts
	
locked	plp                         
	sec                         
	rts                         
	.)

t_uninstall .(
	sei

	lda #<-1
	sta lock
	rts
	.)


	; pause a given number of vertical scree
	; in AC has number of frames (retraces) 
	.xs
	.as
t_pause .(                              
	php
	lda #MAP_BAS
	sta MAPREG
	cli
	
	tax                             
	inx           ; full retraces, s
p0	lda BOOT_VCOUNT                      
p1	cmp BOOT_VCOUNT                      
	beq p1                          
	dex                             
	bne p0                          
	
	lda #MAP_USB
	sta MAPREG
	plp
	rts                             
	.)                              


t_printc2 .(
	tax             ; actually overwrites modifiers in X
	php
	sei
	
	bcs stop
	
	;inc $8027
	
	lda #MAP_BAS
	sta MAPREG
	
	txa
	jsr key_usb
stop
	lda #MAP_USB
	sta MAPREG
	
	plp
	rts
        .)

&tear_usb=t_uninstall
.)

